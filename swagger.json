{
  "openapi": "3.0.0",
  "info": {
    "title": "API Guide Dev",
    "description": "API para o CRUD de uma aplicação de comunidade de desenvolvedores que estão alimanetando um guia para outros devs.",
    "termsOfService": "",
    "contact": {
      "email": "lauroutestesdev@gmail.com.br"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/termos",
      "description": "API de teste - desenvolvimento e homologação"
    },
    {
      "url": "https://api-guide-dev.herokuapp.com/termos",
      "description": "API de produção"
    }
  ],
  "paths": {
    "/all-termos": {
      "get": {
        "summary": "Listar de todos os termos cadastrados.",
        "description": "Rota responsável por listar todos os termos cadastrados na aplicação.",
        "tags": ["Termos"],
        "responses": {
          "404": {
            "description": "Not Found ;("
          },
          "200": {
            "description": "OK ;D",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Termos"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/one-termo/{id}": {
      "get": {
        "summary": "Buscar um termo cadastrado de acordo com o id solicitado.",
        "description": "Rota responsável por trazer apenas o termo solicitado com base no id passado.",
        "tags": ["Termos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do termo que será buscado.",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Not Found ;(",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Termos"
                }
              }
            }
          }
        }
      }
    },
    "/create-termo": {
      "post": {
        "summary": "Cadastrar termo no Guide Dev </>",
        "description": "Rota responsável por cadastrar um termo na API.",
        "tags": ["Termos"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Termos"
              }
            },
            "examples": {
              "Termos": {
                "value": {
                  "termo": "Json",
                  "descricao": "Em computação, JSON, um acrônimo de JavaScript Object Notation, é um formato compacto, de padrão aberto independente, de troca de dados simples e rápida entre sistemas, especificado por Douglas Crockford em 2000, que utiliza texto legível a humanos, no formato atributo-valor.",
                  "logo": "./assets/images/json.png",
                  "ano_de_criacao": 2000
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "201": {
            "description": "Termo created :)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Termos"
                }
              }
            }
          }
        }
      }
    },
    "/update-termo/{id}": {
      "put": {
        "summary": "Editar termo existente na API por meio do id.",
        "description": "Rota responsável por fazer a edição de um termo conforme o id passado pelo cliente.",
        "tags": ["Termos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do termo que será editado.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Termos"
              },
              "examples": {
                "Termos": {
                  "value": {
                    "termo": "Json Editado",
                    "descricao": "Em computação, JSON, um acrônimo de JavaScript Object Notation, é um formato compacto, de padrão aberto independente, de troca de dados simples e rápida entre sistemas, especificado por Douglas Crockford em 2000, que utiliza texto legível a humanos, no formato atributo-valor.",
                    "logo": "./assets/images/json.png",
                    "ano_de_criacao": 2001
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "200": {
            "description": "OK ;D",
            "content": {
              "application/json": {
                "schema": "object",
                "$ref": "#/components/schemas/Termos"
              }
            }
          }
        }
      }
    },
    "/delete-termo/{id}": {
      "delete": {
        "summary": "Apagar um termo da API pelo seu id.",
        "description": "Rota responsável por deletar um termo da aplicação por meio do id que o cliente irá fornecer.",
        "tags": ["Termos"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do termo que será apagado.",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "200": {
            "description": "OK ;D"
          }
        }
      }
    },
    "/all-usuarios": {
      "get": {
        "summary": "Lista todos os usuários cadastrados.",
        "description": "Rota responsável por listar todos os usuários cadastrados no sistema.",
        "tags": ["Usuarios"],
        "responses": {
          "404": {
            "description": "Not Found ;("
          },
          "200": {
            "description": "OK ;D",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Usuarios"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/one-usuario/{id}": {
      "get": {
        "summary": "Buscar um usuário cadastrado de acordo com o id solicitado.",
        "description": "Rota responsável por trazer apenas o usuário solicitado com base no id passado.",
        "tags": ["Usuarios"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do usuário que será buscado.",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Not Found ;(",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Usuarios"
                }
              }
            }
          }
        }
      }
    },
    "/create-usuario": {
      "post": {
        "summary": "Cadastrar usuário no Guide Dev </>",
        "description": "Rota responsável por cadastrar um usuário na API.",
        "tags": ["Usuarios"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuarios"
              }
            },
            "examples": {
              "Usuarios": {
                "value": {
                  "nome": "Teste",
                  "apelido": "Apelido da conta teste",
                  "cpf": "000.000.000-10",
                  "email": "emailexemplo@gmail.com",
                  "senha": "1234",
                  "foto": "https://images.unsplash.com/photo-1534528741775-53994a69daeb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8cGVvcGxlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=800&q=60"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "201": {
            "description": "Usuário created :)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Usuarios"
                }
              }
            }
          }
        }
      }
    },
    "/edit-usuario/{id}": {
      "put": {
        "summary": "Editar um usuário existente na API por meio do id.",
        "description": "Rota responsável por fazer a edição de um usuário conforme o id passado pelo cliente.",
        "tags": ["Usuarios"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do usuário que será editado.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usuarios"
              },
              "examples": {
                "Usuarios": {
                  "value": {
                    "nome": "Teste",
                    "apelido": "Apelido da conta teste",
                    "cpf": "000.000.000-10",
                    "email": "emailexemplo@gmail.com",
                    "senha": "1234",
                    "foto": "https://images.unsplash.com/photo-1534528741775-53994a69daeb?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8M3x8cGVvcGxlfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=800&q=60"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "200": {
            "description": "OK ;D",
            "content": {
              "application/json": {
                "schema": "object",
                "$ref": "#/components/schemas/Usuarios"
              }
            }
          }
        }
      }
    },
    "/delete-usuario/{id}": {
      "delete": {
        "summary": "Apagar um usuário da API pelo seu id.",
        "description": "Rota responsável por deletar um usuário da aplicação por meio do id que o cliente irá fornecer.",
        "tags": ["Usuarios"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id do usuário que será apagado.",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request, bro >:("
          },
          "200": {
            "description": "OK ;D"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Termos": {
        "type": "object",
        "properties": {
          "termo": {
            "type": "string"
          },
          "descricao": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "ano_de_criacao": {
            "type": "number"
          }
        }
      },
      "Usuarios": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string"
          },
          "apelido": {
            "type": "string"
          },
          "cpf": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "senha": {
            "type": "string"
          },
          "foto": {
            "type": "string"
          }
        }
      }
    }
  }
}
